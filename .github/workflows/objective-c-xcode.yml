name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_14.3.app
        
      - name: Set up configuration files
        run: |
          cp Nimbus/Info.plist.example Nimbus/Info.plist
          cp Nimbus/GoogleService-Info.plist.example Nimbus/GoogleService-Info.plist
          cp Nimbus/client_id.plist.example Nimbus/client_YOUR_CLIENT_ID.apps.googleusercontent.com-2.plist
          
      - name: Update placeholder values
        run: |
          sed -i '' 's/YOUR_SUPABASE_URL/https:\/\/example.supabase.co/g' Nimbus/Info.plist
          sed -i '' 's/YOUR_SUPABASE_ANON_KEY/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example/g' Nimbus/Info.plist
          sed -i '' 's/YOUR_FIREBASE_API_KEY/FAKE_API_KEY_FOR_CI_ONLY/g' Nimbus/GoogleService-Info.plist
          sed -i '' 's/com.YourCompany.NimbusMail/com.github.ci.NimbusMail/g' Nimbus/GoogleService-Info.plist
        
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
